#BlueJ class context
comment0.target=Worker
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Worker\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ work()
comment10.params=dirX\ dirY
comment10.target=void\ moveInDirection(int,\ int)
comment10.text=\r\n\ <p>Make\ this\ AnimatedCharacter\ move\ in\ a\ specified\ direction.</p>\r\n\ \r\n\ <p><b>Instructions\:</b></p>\r\n\ <ol>\r\n\ <li>Subclasses\ should\ START\ and\ then\ STOP\ movement,\ not\ call\ this\r\n\ method\ repeatedly.\ This\ is\ so\ that\ the\ animation\ can\ run\ smoothly.\r\n\ Call\ the\ stopMoving()\ method\ to\ stop.</li>\r\n\r\n\ <li>Intended\ to\ receive\ a\ 1\ or\ -1\ for\ for\ ONE\ of\ the\ parameters,\ and\ a\ \r\n\ zero\ (0)\ for\ the\ other.\ This\ method\ does\ not\ allow\ diagonal\ movement.</li>\r\n\ </ol>\r\n\ @param\ dirX\ \ The\ direction\ for\ x\ movement.\ Should\ be\ -1,\ 0\ or\ 1.\r\n\ @param\ dirY\ \ The\ direction\ for\ y\ movement.\ Should\ be\ -1,\ 0\ or\ 1.\ \r\n
comment11.params=direction
comment11.target=void\ moveInDirection(Worker.Direction)
comment11.text=\r\n\ \r\n
comment12.params=direction
comment12.target=void\ stopMoving(Worker.Direction)
comment13.params=
comment13.target=void\ stopMoving()
comment14.params=rotation
comment14.target=void\ moveBySetRotation(int)
comment15.params=x\ y
comment15.target=void\ setLocation(int,\ int)
comment15.text=\r\n\ Override\ the\ default\ setLocation\ method\ because\ the\ backing\r\n\ variables\ xx\ and\ yy\ need\ to\ be\ updated,\ otherwise\ they\ will\r\n\ immediately\ move\ the\ player\ back\ every\ time\ it\ tries\ to\ move.\r\n
comment16.params=removeAfterAnimation
comment16.target=void\ death(boolean)
comment17.params=
comment17.target=void\ stepBack()
comment17.text=\r\n\ Called\ to\ avoid\ getting\ stuck\ on\ an\ object\ -\ when\ you\ detect\ that\ you\r\n\ have\ hit\ an\ object,\ call\ this\ method\ to\ go\ back\ to\ the\ previous\ position,\r\n\ so\ your\ Actor\ won't\ get\ stuck\ in\ a\ loop\ where\ it's\ touching\ the\ object\ so\r\n\ it\ cannot\ move.\ See\ Player\ class\ for\ example.\r\n
comment18.params=images
comment18.target=void\ setCurrentImages(greenfoot.GreenfootImage[])
comment19.params=
comment19.target=void\ act()
comment19.text=\r\n\ Act\ -\ do\ whatever\ the\ Walker\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment2.params=
comment2.target=void\ changeRank()
comment3.params=
comment3.target=Worker()
comment4.params=w
comment4.target=void\ addedToWorld(greenfoot.World)
comment5.params=baseString\ nDirs\ nFrames
comment5.target=greenfoot.GreenfootImage[][]\ importMoveSprites(java.lang.String,\ int,\ int)
comment5.text=\r\n\ Import\ ..\ needs\ work\ to\ work\ with\ anything\ outside\ of\ SpriteFoot\ sprites\r\n\ \r\n\ TODO\:\ remove\ nDirs\ -\ should\ always\ be\ 4\ anyway.\r\n
comment6.params=baseString\ nFrames
comment6.target=greenfoot.GreenfootImage[]\ importDeathSprites(java.lang.String,\ int)
comment7.params=moveSpeed\ framesPerSecond
comment7.target=void\ changeSpeed(int,\ int)
comment7.text=\r\n\ Set\ the\ movement\ speed\ (in\ pixels\ per\ second)\ and\ the\ animation\ rate\r\n\ (in\ frames\ per\ second)\r\n
comment8.params=a
comment8.target=void\ moveTowards(greenfoot.Actor)
comment8.text=\r\n\ Move\ towards\ a\ specified\ actor.\ \r\n\ \r\n\ @param\ Actor\ the\ Actor\ to\ move\ toward\ at\ the\ current\ speed\ and\ framerate\r\n
comment9.params=targetX\ targetY
comment9.target=void\ moveTowards(int,\ int)
numComments=20
