#BlueJ class context
comment0.target=Product
comment0.text=\r\n\ Products\ that\ can\ be\ interacted\ by\ workers\ to\ be\ built\ and\ contribute\ to\ the\ war\ effort.\r\n\ \r\n\ @author\ Carl\ Lam\r\n\ @version\ October\ 2019\r\n
comment1.params=
comment1.target=void\ updateImage()
comment10.params=
comment10.target=void\ updateBuildPointLimit()
comment10.text=\r\n\ Updates\ the\ maximum\ allowable\ value\ that\ the\ worker\ can\ build\ to,\ depending\ on\ the\ position\ of\ the\ product.\r\n\ (eg.\ cannot\ build\ up\ to\ stage\ 4\ when\ only\ at\ station\ 2).\r\n
comment11.params=
comment11.target=void\ moveChecker()
comment11.text=\r\n\ Checks\ to\ see\ if\ object\ has\ reached\ its\ 'limit'\ for\ the\ current\ stage\ on\ the\ conveyor\ belt.\r\n\ If\ it\ is\ at\ the\ limit,\ it\ will\ not\ move.\r\n
comment12.params=MyWorld
comment12.target=void\ addedToWorld(greenfoot.World)
comment12.text=\r\n\ If\ touching\ an\ object\ on\ spawn,\ delete\ to\ prevent\ stacking\ object.\r\n
comment13.params=
comment13.target=boolean\ isAtBuildStation()
comment13.text=\r\n\ Returns\ true\ if\ the\ object\ is\ within\ range\ of\ a\ build\ station.\r\n
comment14.params=
comment14.target=void\ turnToTrash()
comment14.text=\r\n\ Turns\ the\ object\ into\ a\ bag\ of\ trash\ that\ goes\ to\ the\ factory\ edge.\r\n
comment15.params=
comment15.target=void\ checkObjectAhead()
comment15.text=\r\n\ Checks\ 5\ pixels\ ahead\ of\ the\ object\ for\ another\ object,\ so\ that\ it\ stops\ and\r\n\ doesn't\ overlap\ with\ another\ one.\r\n
comment16.params=
comment16.target=int\ getObjOffset()
comment16.text=\r\n\ Returns\ half\ of\ the\ width\ of\ the\ image.\r\n
comment2.params=
comment2.target=void\ edgeCheck()
comment3.params=
comment3.target=void\ buildSound()
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ Actions\ to\ be\ called\ every\ act.\r\n
comment5.params=inputBuildPoints
comment5.target=boolean\ build(int)
comment5.text=\r\n\ \ Adds\ points\ to\ the\ current\ build\ points,\ and\ checks\ to\ see\ if\ the\ image\ of\ the\ \r\n\ \ item\ needs\ an\ update\ based\ on\ the\ new\ "balance"\ of\ points,\ only\ when\ the\ object\ is\ not\ moving.\r\n\ \ \r\n\ \ @param\ inputBuildPoints\ Number\ of\ points\ to\ add\ to\ the\ object.\r\n
comment6.params=speed
comment6.target=void\ changeMoveSpeed(int)
comment6.text=\r\n\ Changes\ move\ speed\ of\ product.\ Will\ not\ allow\ for\ values\ under\ 0.\r\n\ \r\n\ @param\ speed\ The\ int\ value\ to\ change\ the\ speed\ to.\r\n
comment7.params=
comment7.target=int\ getBuildPoints()
comment7.text=\r\n\ Returns\ the\ current\ build\ points\ that\ the\ product\ has.\r\n\ \r\n\ @return\ The\ current\ build\ points.\ \r\n
comment8.params=
comment8.target=void\ updateXLimit()
comment8.text=\r\n\ Updates\ the\ maximum\ X\ position\ that\ the\ product\ can\ move\ to\ until\ it\ finishes\ it's\ build\ stage.\r\n
comment9.params=
comment9.target=void\ updateStage()
comment9.text=\r\n\ Returns\ the\ current\ stage\ of\ production\ that\ the\ product\ is\ currently\ in.\r\n
numComments=17
